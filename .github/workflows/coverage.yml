# This name is shown in the status badge in the README
name: Test coverage

on:
  push:
    branches: [main]

jobs:
  test:
    name: Measure mutation test coverage

    runs-on: ubuntu-latest

    permissions:
      contents: write  # For push to GitHub Pages

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Run mutation test
      run: ./gradlew pitestMerge

    - name: Install yq (and xq)
      run: |
        pip install yq

    - name: Create output directory
      run: mkdir -p build/gh-pages

    - name: Collect HTML reports
      run: |
        mkdir -p build/gh-pages/mutation-coverage-reports
        for sp in webauthn-server-attestation webauthn-server-core yubico-util; do
          cp -a "${sp}"/build/reports/pitest build/gh-pages/mutation-coverage-reports/"${sp}"
        done
        sed "s/{shortcommit}/${GITHUB_SHA:0:8}/g;s/{commit}/${GITHUB_SHA}/g;s#{repo}#${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}#g" .github/workflows/coverage/index.html.template > build/gh-pages/index.html

    - name: Create coverage badge
      # This creates a file that defines a [Shields.io endpoint badge](https://shields.io/endpoint)
      # which we can then include in the project README.
      run: |
        cat build/reports/pitest/mutations.xml \
        | xq '.mutations.mutation
          | (map(select(.["@detected"] == "true")) | length) / length
          | {
              schemaVersion: 1,
              label: "mutation coverage",
              message: "\(. * 100 | floor | tostring) %",
              color: "hsl(\(. * 120 | floor | tostring), 100%, 40%",
              cacheSeconds: 3600,
            }' \
        > build/gh-pages/coverage-badge.json

    - name: Check out GitHub Pages branch
      uses: actions/checkout@v3
      with:
        ref: gh-pages
        clean: false

    - name: Post mutation test results as commit comment
      run: |
        git checkout "${GITHUB_SHA}" -- .github/workflows/coverage

        ./.github/workflows/coverage/compute-stats.sh build/reports/pitest/mutations.xml > new-stats.json

        if [[ -f prev-mutations.xml ]]; then
          ./.github/workflows/coverage/compute-stats.sh prev-mutations.xml > prev-stats.json
        else
          cp new-stats.json prev-stats.json
        fi

        touch prev-commit.txt

        ./.github/workflows/coverage/stats-to-comment.sh prev-stats.json new-stats.json $(cat prev-commit.txt) > build/results-comment.json

        curl -X POST \
           -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
           ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/commits/${GITHUB_SHA}/comments -d @build/results-comment.json
        mv new-stats.json prev-stats.json

    - name: Push to GitHub Pages
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git rm -rf -- .
        mv build/gh-pages/* .
        cp build/reports/pitest/mutations.xml prev-mutations.xml
        echo "${GITHUB_SHA}" > prev-commit.txt
        git add coverage-badge.json index.html mutation-coverage-reports prev-mutations.xml prev-commit.txt
        git commit --amend --reset-author -m "Generate GitHub Pages content"
        git push -f
