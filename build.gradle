buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.cinnober.gradle:semver-git:2.5.0'
  }
}
plugins {
  id 'java-platform'
  id 'maven-publish'
  id 'signing'
  id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

import com.yubico.gradle.GitUtils

rootProject.description = "Metadata root for the com.yubico:webauthn-server-* module family"

project.ext.isCiBuild = System.env.CI == 'true'

project.ext.publishEnabled = !isCiBuild &&
  project.hasProperty('yubicoPublish') && project.yubicoPublish &&
  project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')

if (publishEnabled) {
  nexusPublishing {
    repositories {
      sonatype {
        stagingProfileId = '6c61426e6529d'

        username = ossrhUsername
        password = ossrhPassword
      }
    }
  }
}

wrapper {
  gradleVersion = '7.5.1'
}

dependencies {
  constraints {
    api('com.augustcellars.cose:cose-java:[1.0.0,2)')
    api('com.fasterxml.jackson.core:jackson-databind:[2.13.2.1,3)')
    api('com.google.guava:guava:[24.1.1,32)')
    api('com.upokecenter:cbor:[4.5.1,5)')
    api('org.apache.httpcomponents.client5:httpclient5:[5.0.0,6)')
    api('org.slf4j:slf4j-api:[1.7.25,3)')
  }
}

allprojects {
  ext.snapshotSuffix = "<count>.g<sha>-SNAPSHOT<dirty>"
  ext.dirtyMarker = "-DIRTY"

  apply plugin: 'com.cinnober.gradle.semver-git'
  apply plugin: 'idea'

  group = 'com.yubico'

  idea.module {
    downloadJavadoc = true
    downloadSources = true
  }
}

subprojects {
  repositories {
    mavenLocal()
    mavenCentral()
  }
}

allprojects {
  evaluationDependsOnChildren()
}

task assembleJavadoc(type: Sync) {
  from("docs/index.html") {
    expand project.properties
  }
  destinationDir = file("${rootProject.buildDir}/javadoc")
}

task checkJavaVersionBeforeRelease {
  doFirst {
    if (JavaVersion.current() != JavaVersion.VERSION_17) {
      throw new RuntimeException('Release must be built using JDK 17. Current JDK version: ' + JavaVersion.current())
    }
  }
}

subprojects { project ->
  tasks.withType(JavaCompile) {
    options.compilerArgs += '-Xlint:unchecked'
    options.deprecation = true
    options.encoding = 'UTF-8'
  }
  tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = ['-Wunused']
  }

  tasks.withType(AbstractArchiveTask) {
    from(rootProject.file('COPYING'))
    preserveFileTimestamps = false
    reproducibleFileOrder = true
  }

  tasks.withType(AbstractTestTask) {
    testLogging {
      showStandardStreams = isCiBuild
    }
  }

  tasks.withType(AbstractCompile) { shouldRunAfter checkJavaVersionBeforeRelease }
  tasks.withType(AbstractTestTask) { shouldRunAfter checkJavaVersionBeforeRelease }
  tasks.withType(Sign) {
    it.dependsOn check
    dependsOn checkJavaVersionBeforeRelease
  }

  if (project.hasProperty('publishMe') && project.publishMe) {
    if (GitUtils.getGitCommit(projectDir) == null) {
      throw new RuntimeException("Failed to get git commit ID")
    }

    task sourcesJar(type: Jar) {
      archiveClassifier = 'sources'
      from sourceSets.main.allSource
    }

    javadoc {
      options.encoding = 'UTF-8'
      options.addStringOption('charset', 'UTF-8')
    }

    task javadocJar(type: Jar) {
      archiveClassifier = 'javadoc'
      from javadoc
    }

    publishing {
      publications {
        jars(MavenPublication) {
          from components.java
          artifact javadocJar
          artifact sourcesJar

          pom {
            name = project.name
            description = project.description
            url = 'https://developers.yubico.com/java-webauthn-server/'

            developers {
              developer {
                id = 'emil'
                name = 'Emil Lundberg'
                email = 'emil@yubico.com'
              }
            }

            licenses {
              license {
                name = 'BSD-license'
                comments = 'Revised 2-clause BSD license'
              }
            }

            scm {
              url = 'scm:git:git://github.com/Yubico/java-webauthn-server.git'
              connection = 'scm:git:git://github.com/Yubico/java-webauthn-server.git'
              developerConnection = 'scm:git:ssh://git@github.com/Yubico/java-webauthn-server.git'
              tag = 'HEAD'
            }
          }
        }
      }
    }

    if (publishEnabled) {
      signing {
        useGpgCmd()
        sign publishing.publications.jars
      }
    }
  }

}

// The root project has no sources, but the dependency platform also needs to be published as an artifact
// See https://docs.gradle.org/current/userguide/java_platform_plugin.html
// See https://github.com/Yubico/java-webauthn-server/issues/93#issuecomment-822806951
publishing {
  publications {
    jars(MavenPublication) {
      from components.javaPlatform

      pom {
        name = project.name
        description = project.description
        url = 'https://developers.yubico.com/java-webauthn-server/'

        developers {
          developer {
            id = 'emil'
            name = 'Emil Lundberg'
            email = 'emil@yubico.com'
          }
        }

        licenses {
          license {
            name = 'BSD-license'
            comments = 'Revised 2-clause BSD license'
          }
        }

        scm {
          url = 'scm:git:git://github.com/Yubico/java-webauthn-server.git'
          connection = 'scm:git:git://github.com/Yubico/java-webauthn-server.git'
          developerConnection = 'scm:git:ssh://git@github.com/Yubico/java-webauthn-server.git'
          tag = 'HEAD'
        }
      }
    }
  }
}

if (publishEnabled) {
  signing {
    useGpgCmd()
    sign publishing.publications.jars
  }
}

task pitestMerge(type: com.yubico.gradle.pitest.tasks.PitestMergeTask)
